(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{212:function(t,a,i){"use strict";i.r(a);var s=i(0),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git问题集锦"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git问题集锦"}},[t._v("#")]),t._v(" git问题集锦")]),t._v(" "),i("h2",{attrs:{id:"_1-查看远程信息库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看远程信息库"}},[t._v("#")]),t._v(" 1.查看远程信息库")]),t._v(" "),i("ul",[i("li",[t._v("当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且远程仓库的默认名称是origin。要查看远程库的信息用git remote")])]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git remote ---输出origin\n或者用git remote -v显示更详细的信息\n$ git remote -v\n---输出\norigin http://10.10.10.10:8080/项目目录/abc-abc-web.git (fetch)\norigin http://10.10.10.10:8080/项目目录/abc-abc-web.git (push)\n")])])]),i("h2",{attrs:{id:"_2-下载一个新项目"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载一个新项目"}},[t._v("#")]),t._v(" 2.下载一个新项目")]),t._v(" "),i("ul",[i("li",[t._v("下载一个新项目并在本地新建开发分支，拉去远程开发分支代码到本地")])]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("1. git clone http://10.10.10.10:8080/项目目录/abc-abc-web.git ---克隆项目\n2. git fetch ---拉取所有分支\n3. git checkout -b dev origin/dev ---切换到dev分支\n4. git pull origin dev ---将dev分支拉取到本地dev分支\n")])])]),i("h2",{attrs:{id:"_3-git-打开忽略识别文件夹大小写命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-打开忽略识别文件夹大小写命令"}},[t._v("#")]),t._v(" 3.git 打开忽略识别文件夹大小写命令")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("git config core.ignorecase false\n")])])]),i("h3",{attrs:{id:"_4-git-push-origin与git-push-u-origin-master的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-push-origin与git-push-u-origin-master的区别"}},[t._v("#")]),t._v(" 4.git push origin与git push -u origin master的区别")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git push origin命令表示，将当前分支推送到origin主机的对应分支。 \n\n如果当前分支只有一个追踪分支，那么主机名都可以省略。 \n\n$ git push 如果当前分支与多个主机存在追踪关系，那么这个时候-u选项会指定一个默认主机，这样后面就可以不加任何参数使用git push。\n\n$ git push -u origin master 上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。\n\n不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);